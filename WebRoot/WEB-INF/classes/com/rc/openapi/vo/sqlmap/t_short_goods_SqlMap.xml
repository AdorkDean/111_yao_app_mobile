<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="t_short_goods" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.rc.openapi.vo.TShortGoods" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="limit_count" property="limitCount" jdbcType="INTEGER" />
    <result column="total_count" property="totalCount" jdbcType="INTEGER" />
    <result column="short_buy_id" property="shortBuyId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TShortGoodsExample" >
    select id, goods_id, price, limit_count, total_count, short_buy_id
    from t_short_goods
    <isParameterPresent >
      <include refid="t_short_goods.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TShortGoods" >
    select id, goods_id, price, limit_count, total_count, short_buy_id
    from t_short_goods
    where id = #id:BIGINT#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.rc.openapi.vo.TShortGoods" >
    delete from t_short_goods
    where id = #id:BIGINT#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.rc.openapi.vo.TShortGoodsExample" >
    delete from t_short_goods
    <include refid="t_short_goods.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.rc.openapi.vo.TShortGoods" >
    insert into t_short_goods (id, goods_id, price, limit_count, total_count, short_buy_id)
    values (#id:BIGINT#, #goodsId:BIGINT#, #price:DECIMAL#, #limitCount:INTEGER#,
      #totalCount:INTEGER#, #shortBuyId:BIGINT#)
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <insert id="ibatorgenerated_insertSelective" parameterClass="com.rc.openapi.vo.TShortGoods" >
    insert into t_short_goods
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        goods_id
      </isNotNull>
      <isNotNull prepend="," property="price" >
        price
      </isNotNull>
      <isNotNull prepend="," property="limitCount" >
        limit_count
      </isNotNull>
      <isNotNull prepend="," property="totalCount" >
        total_count
      </isNotNull>
      <isNotNull prepend="," property="shortBuyId" >
        short_buy_id
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="price" >
        #price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="limitCount" >
        #limitCount:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="totalCount" >
        #totalCount:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="shortBuyId" >
        #shortBuyId:BIGINT#
      </isNotNull>
      )
    </dynamic>
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <select id="ibatorgenerated_countByExample" parameterClass="com.rc.openapi.vo.TShortGoodsExample" resultClass="java.lang.Integer" >
    select count(*) from t_short_goods
    <include refid="t_short_goods.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update t_short_goods
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.goodsId" >
        goods_id = #record.goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.price" >
        price = #record.price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.limitCount" >
        limit_count = #record.limitCount:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.totalCount" >
        total_count = #record.totalCount:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.shortBuyId" >
        short_buy_id = #record.shortBuyId:BIGINT#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="t_short_goods.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update t_short_goods
    set id = #record.id:BIGINT#,
      goods_id = #record.goodsId:BIGINT#,
      price = #record.price:DECIMAL#,
      limit_count = #record.limitCount:INTEGER#,
      total_count = #record.totalCount:INTEGER#,
      short_buy_id = #record.shortBuyId:BIGINT#
    <isParameterPresent >
      <include refid="t_short_goods.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.rc.openapi.vo.TShortGoods" >
    update t_short_goods
    <dynamic prepend="set" >
      <isNotNull prepend="," property="goodsId" >
        goods_id = #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="price" >
        price = #price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="limitCount" >
        limit_count = #limitCount:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="totalCount" >
        total_count = #totalCount:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="shortBuyId" >
        short_buy_id = #shortBuyId:BIGINT#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.rc.openapi.vo.TShortGoods" >
    update t_short_goods
    set goods_id = #goodsId:BIGINT#,
      price = #price:DECIMAL#,
      limit_count = #limitCount:INTEGER#,
      total_count = #totalCount:INTEGER#,
      short_buy_id = #shortBuyId:BIGINT#
    where id = #id:BIGINT#
  </update>
  <select id="selectByExampleByPage" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TShortGoodsExample" >
                    select id, goods_id, price, limit_count, total_count, short_buy_id
                    from t_short_goods
                    <isParameterPresent >
                      <include refid="t_short_goods.ibatorgenerated_Example_Where_Clause" />
                      <isNotNull property="orderByClause" >
                        order by $orderByClause$
                      </isNotNull>
                    </isParameterPresent>
					limit $pageInfo.start$ ,$pageInfo.pageSize$
  </select>
</sqlMap>
