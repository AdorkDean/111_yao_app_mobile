<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="t_category_img" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.rc.openapi.vo.TCategoryImg" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="category_id" property="categoryId" jdbcType="BIGINT" />
    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
    <result column="is_show" property="isShow" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="is_wap" property="isWap" jdbcType="INTEGER" />
    <result column="is_app" property="isApp" jdbcType="INTEGER" />
    <result column="is_pc" property="isPc" jdbcType="INTEGER" />
    <result column="create_dt" property="createDt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TCategoryImgExample" >
    select id, category_id, img_url, is_show, is_delete, is_wap, is_app, is_pc, create_dt
    from t_category_img
    <isParameterPresent >
      <include refid="t_category_img.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TCategoryImg" >
    select id, category_id, img_url, is_show, is_delete, is_wap, is_app, is_pc, create_dt
    from t_category_img
    where id = #id:BIGINT#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.rc.openapi.vo.TCategoryImg" >
    delete from t_category_img
    where id = #id:BIGINT#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.rc.openapi.vo.TCategoryImgExample" >
    delete from t_category_img
    <include refid="t_category_img.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.rc.openapi.vo.TCategoryImg" >
    insert into t_category_img (id, category_id, img_url, is_show, is_delete, is_wap, is_app, is_pc,
      create_dt)
    values (#id:BIGINT#, #categoryId:BIGINT#, #imgUrl:VARCHAR#, #isShow:INTEGER#,
      #isDelete:INTEGER#, #isWap:INTEGER#, #isApp:INTEGER#, #isPc:INTEGER#, #createDt:TIMESTAMP#)
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <insert id="ibatorgenerated_insertSelective" parameterClass="com.rc.openapi.vo.TCategoryImg" >
    insert into t_category_img
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="categoryId" >
        category_id
      </isNotNull>
      <isNotNull prepend="," property="imgUrl" >
        img_url
      </isNotNull>
      <isNotNull prepend="," property="isShow" >
        is_show
      </isNotNull>
      <isNotNull prepend="," property="isDelete" >
        is_delete
      </isNotNull>
      <isNotNull prepend="," property="isWap" >
        is_wap
      </isNotNull>
      <isNotNull prepend="," property="isApp" >
        is_app
      </isNotNull>
      <isNotNull prepend="," property="isPc" >
        is_pc
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        create_dt
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="categoryId" >
        #categoryId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="imgUrl" >
        #imgUrl:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="isShow" >
        #isShow:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isDelete" >
        #isDelete:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isWap" >
        #isWap:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isApp" >
        #isApp:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isPc" >
        #isPc:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        #createDt:TIMESTAMP#
      </isNotNull>
      )
    </dynamic>
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <select id="ibatorgenerated_countByExample" parameterClass="com.rc.openapi.vo.TCategoryImgExample" resultClass="java.lang.Integer" >
    select count(*) from t_category_img
    <include refid="t_category_img.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update t_category_img
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.categoryId" >
        category_id = #record.categoryId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.imgUrl" >
        img_url = #record.imgUrl:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.isShow" >
        is_show = #record.isShow:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.isDelete" >
        is_delete = #record.isDelete:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.isWap" >
        is_wap = #record.isWap:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.isApp" >
        is_app = #record.isApp:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.isPc" >
        is_pc = #record.isPc:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.createDt" >
        create_dt = #record.createDt:TIMESTAMP#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="t_category_img.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update t_category_img
    set id = #record.id:BIGINT#,
      category_id = #record.categoryId:BIGINT#,
      img_url = #record.imgUrl:VARCHAR#,
      is_show = #record.isShow:INTEGER#,
      is_delete = #record.isDelete:INTEGER#,
      is_wap = #record.isWap:INTEGER#,
      is_app = #record.isApp:INTEGER#,
      is_pc = #record.isPc:INTEGER#,
      create_dt = #record.createDt:TIMESTAMP#
    <isParameterPresent >
      <include refid="t_category_img.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.rc.openapi.vo.TCategoryImg" >
    update t_category_img
    <dynamic prepend="set" >
      <isNotNull prepend="," property="categoryId" >
        category_id = #categoryId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="imgUrl" >
        img_url = #imgUrl:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="isShow" >
        is_show = #isShow:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isDelete" >
        is_delete = #isDelete:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isWap" >
        is_wap = #isWap:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isApp" >
        is_app = #isApp:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isPc" >
        is_pc = #isPc:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        create_dt = #createDt:TIMESTAMP#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.rc.openapi.vo.TCategoryImg" >
    update t_category_img
    set category_id = #categoryId:BIGINT#,
      img_url = #imgUrl:VARCHAR#,
      is_show = #isShow:INTEGER#,
      is_delete = #isDelete:INTEGER#,
      is_wap = #isWap:INTEGER#,
      is_app = #isApp:INTEGER#,
      is_pc = #isPc:INTEGER#,
      create_dt = #createDt:TIMESTAMP#
    where id = #id:BIGINT#
  </update>
  <select id="selectByExampleByPage" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TCategoryImgExample" >
                    select id, category_id, img_url, is_show, is_delete, is_wap, is_app, is_pc, create_dt
                    from t_category_img
                    <isParameterPresent >
                      <include refid="t_category_img.ibatorgenerated_Example_Where_Clause" />
                      <isNotNull property="orderByClause" >
                        order by $orderByClause$
                      </isNotNull>
                    </isParameterPresent>
					limit $pageInfo.start$ ,$pageInfo.pageSize$
  </select>
</sqlMap>
