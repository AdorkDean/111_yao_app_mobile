<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="t_order_item" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.rc.openapi.vo.TOrderItem" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="if_premiums" property="ifPremiums" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="if_reviews" property="ifReviews" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="brokerage" property="brokerage" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TOrderItemExample" >
    select id, goods_id, if_premiums, quantity, price, if_reviews, create_time, order_id, brokerage
    from t_order_item
    <isParameterPresent >
      <include refid="t_order_item.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TOrderItem" >
    select id, goods_id, if_premiums, quantity, price, if_reviews, create_time, order_id, brokerage
    from t_order_item
    where id = #id:BIGINT#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.rc.openapi.vo.TOrderItem" >
    delete from t_order_item
    where id = #id:BIGINT#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.rc.openapi.vo.TOrderItemExample" >
    delete from t_order_item
    <include refid="t_order_item.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.rc.openapi.vo.TOrderItem" >
    insert into t_order_item (id, goods_id, if_premiums, quantity, price, if_reviews, create_time,
      order_id, brokerage)
    values (#id:BIGINT#, #goodsId:BIGINT#, #ifPremiums:INTEGER#, #quantity:INTEGER#,
      #price:DECIMAL#, #ifReviews:INTEGER#, #createTime:TIMESTAMP#, #orderId:BIGINT#,
      #brokerage:DECIMAL#)
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <insert id="ibatorgenerated_insertSelective" parameterClass="com.rc.openapi.vo.TOrderItem" >
    insert into t_order_item
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        goods_id
      </isNotNull>
      <isNotNull prepend="," property="ifPremiums" >
        if_premiums
      </isNotNull>
      <isNotNull prepend="," property="quantity" >
        quantity
      </isNotNull>
      <isNotNull prepend="," property="price" >
        price
      </isNotNull>
      <isNotNull prepend="," property="ifReviews" >
        if_reviews
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time
      </isNotNull>
      <isNotNull prepend="," property="orderId" >
        order_id
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        brokerage
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="ifPremiums" >
        #ifPremiums:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="quantity" >
        #quantity:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="price" >
        #price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="ifReviews" >
        #ifReviews:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="orderId" >
        #orderId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        #brokerage:DECIMAL#
      </isNotNull>
      )
    </dynamic>
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <select id="ibatorgenerated_countByExample" parameterClass="com.rc.openapi.vo.TOrderItemExample" resultClass="java.lang.Integer" >
    select count(*) from t_order_item
    <include refid="t_order_item.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update t_order_item
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.goodsId" >
        goods_id = #record.goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.ifPremiums" >
        if_premiums = #record.ifPremiums:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.quantity" >
        quantity = #record.quantity:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.price" >
        price = #record.price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.ifReviews" >
        if_reviews = #record.ifReviews:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime" >
        create_time = #record.createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.orderId" >
        order_id = #record.orderId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.brokerage" >
        brokerage = #record.brokerage:DECIMAL#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="t_order_item.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update t_order_item
    set id = #record.id:BIGINT#,
      goods_id = #record.goodsId:BIGINT#,
      if_premiums = #record.ifPremiums:INTEGER#,
      quantity = #record.quantity:INTEGER#,
      price = #record.price:DECIMAL#,
      if_reviews = #record.ifReviews:INTEGER#,
      create_time = #record.createTime:TIMESTAMP#,
      order_id = #record.orderId:BIGINT#,
      brokerage = #record.brokerage:DECIMAL#
    <isParameterPresent >
      <include refid="t_order_item.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.rc.openapi.vo.TOrderItem" >
    update t_order_item
    <dynamic prepend="set" >
      <isNotNull prepend="," property="goodsId" >
        goods_id = #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="ifPremiums" >
        if_premiums = #ifPremiums:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="quantity" >
        quantity = #quantity:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="price" >
        price = #price:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="ifReviews" >
        if_reviews = #ifReviews:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time = #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="orderId" >
        order_id = #orderId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        brokerage = #brokerage:DECIMAL#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.rc.openapi.vo.TOrderItem" >
    update t_order_item
    set goods_id = #goodsId:BIGINT#,
      if_premiums = #ifPremiums:INTEGER#,
      quantity = #quantity:INTEGER#,
      price = #price:DECIMAL#,
      if_reviews = #ifReviews:INTEGER#,
      create_time = #createTime:TIMESTAMP#,
      order_id = #orderId:BIGINT#,
      brokerage = #brokerage:DECIMAL#
    where id = #id:BIGINT#
  </update>
  <select id="selectByExampleByPage" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.openapi.vo.TOrderItemExample" >
                    select id, goods_id, if_premiums, quantity, price, if_reviews, create_time, order_id, brokerage
                    from t_order_item
                    <isParameterPresent >
                      <include refid="t_order_item.ibatorgenerated_Example_Where_Clause" />
                      <isNotNull property="orderByClause" >
                        order by $orderByClause$
                      </isNotNull>
                    </isParameterPresent>
					limit $pageInfo.start$ ,$pageInfo.pageSize$
  </select>
  <select id="selectProductByOrderId" parameterClass="java.util.Map" resultClass="java.util.HashMap" >
  	SELECT 
	tg.short_name as NAME,
	CAST(TRUNCATE(toi.price, 2) AS CHAR) AS price,
	CAST(toi.quantity AS CHAR) AS quantity,
	tg.abbreviation_picture as thumbnail,
	CAST(toi.order_id AS CHAR) AS orders,
	tg.goodscode as sn,
	CAST(tg.id AS CHAR) AS productId
	from t_order_item toi
	LEFT JOIN t_goods tg
	on toi.goods_id = tg.id
	where toi.order_id =#orderId#
  </select>
  
  <select id="selectGoodsByOrderId" parameterClass="java.util.Map" resultClass="java.util.HashMap" >
    SELECT tg.id,tg.abbreviation_picture as thumbnail,
	toi.quantity,CAST(TRUNCATE(toi.price, 2) AS CHAR) AS price,tg.short_name as name 
	from t_order_item as toi 
	LEFT JOIN t_goods as tg
	ON toi.goods_id = tg.id
	where order_id = #orderId#
  </select>
  
  
    
  <select id="countFanxianAmount" resultClass="java.lang.Double" parameterClass="java.util.Map" >
	SELECT 
  SUM(t.quantity * t.price *  (t.brokerage/100)) 
FROM
  t_order_item t 
WHERE t.order_id =#orderId#
  AND t.quantity IS NOT NULL 
  AND t.price IS NOT NULL 
  AND t.brokerage IS NOT NULL
  </select>
  
  
    <select id="countFanxianAmountAgent" resultClass="java.lang.Double" parameterClass="java.util.Map" >
	SELECT 
  SUM(t.quantity * t.price *  (1/100)) 
FROM
  t_order_item t 
WHERE t.order_id =#orderId#
  AND t.quantity IS NOT NULL 
  AND t.price IS NOT NULL 
  AND t.brokerage IS NOT NULL 
  </select>
  
   <select id="selectOrderItemGoodsByOrderid" resultClass="java.util.HashMap" parameterClass="java.util.Map" >
	SELECT
	t.id,
	t.goods_id,
	t.price,
	t.quantity,
	tg.goods_name,
	tg.goodsno
	FROM
	t_order_item t,
	t_goods tg
	where t.goods_id = tg.id
	<isNotNull property="orderId">
		and t.order_id =#orderId#
	</isNotNull>
	
                    
  </select>
  
  
  <select id="selectTOrderItemByCart" resultClass="Integer" parameterClass="java.util.HashMap" >
	
  SELECT 
  sum(ti.`quantity`) 
FROM
  t_order_item ti 
  LEFT JOIN t_order t 
    ON ti.`order_id` = t.id 
WHERE ti.`goods_id` = #goodId:BIGINT# 
  AND t.`create_date` <![CDATA[ >= ]]> #startTime:VARCHAR# 
  AND t.`create_date` <![CDATA[ <= ]]> #endTime:VARCHAR# 
  AND t.member_id=#memberId:BIGINT#
  AND t.order_status in ('0','1','2','3')
  </select>
  

  
  <select id="selectQuantityByGoodIdOrder" resultClass="Integer" parameterClass="java.util.HashMap" >
  	SELECT 
	  t.`quantity` 
	FROM
	  t_order_item t 
	WHERE t.`goods_id` = #goodsId:BIGINT# 
	  AND t.`order_id` = #orderId:BIGINT# 
	ORDER BY t.`create_time` DESC 
	LIMIT 0, 1 
  </select>
</sqlMap>
